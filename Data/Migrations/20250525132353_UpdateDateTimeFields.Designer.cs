// <auto-generated />
using System;
using Hirfa.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Hirfa.Web.Migrations
{
    [DbContext(typeof(HirfaDbContext))]
    [Migration("20250525132353_UpdateDateTimeFields")]
    partial class UpdateDateTimeFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Hirfa.Web.Models.Admin", b =>
                {
                    b.Property<int>("Idadmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idadmin");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idadmin"));

                    b.Property<int>("Idcompte")
                        .HasColumnType("integer")
                        .HasColumnName("idcompte");

                    b.HasKey("Idadmin")
                        .HasName("admin_pkey");

                    b.HasIndex(new[] { "Idcompte" }, "admin_idcompte_key")
                        .IsUnique();

                    b.ToTable("admin", (string)null);
                });

            modelBuilder.Entity("Hirfa.Web.Models.Client", b =>
                {
                    b.Property<int>("Idclient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idclient");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idclient"));

                    b.Property<string>("Adresse")
                        .HasColumnType("text")
                        .HasColumnName("adresse");

                    b.Property<DateOnly?>("Datenaissance")
                        .HasColumnType("date")
                        .HasColumnName("datenaissance");

                    b.Property<int>("Idcompte")
                        .HasColumnType("integer")
                        .HasColumnName("idcompte");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nom");

                    b.Property<string>("Numerotelephone")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("numerotelephone");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("prenom");

                    b.Property<string>("Sexe")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("sexe");

                    b.HasKey("Idclient")
                        .HasName("client_pkey");

                    b.HasIndex(new[] { "Idcompte" }, "client_idcompte_key")
                        .IsUnique();

                    b.ToTable("client", (string)null);
                });

            modelBuilder.Entity("Hirfa.Web.Models.Compte", b =>
                {
                    b.Property<int>("Idcompte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idcompte");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idcompte"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Motdepasse")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("motdepasse");

                    b.HasKey("Idcompte")
                        .HasName("compte_pkey");

                    b.HasIndex(new[] { "Email" }, "compte_email_key")
                        .IsUnique();

                    b.ToTable("compte", (string)null);
                });

            modelBuilder.Entity("Hirfa.Web.Models.Demandeclient", b =>
                {
                    b.Property<int>("Iddemandeclient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("iddemandeclient");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Iddemandeclient"));

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("categorie");

                    b.Property<DateTime>("Datedebut")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datedebut");

                    b.Property<DateTime>("Datedemande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datedemande")
                        .HasDefaultValueSql("CURRENT_DATE");

                    b.Property<DateTime?>("Datefin")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("datefin");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Etat")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("etat");

                    b.Property<int>("Idclient")
                        .HasColumnType("integer")
                        .HasColumnName("idclient");

                    b.Property<int?>("Idprestataire")
                        .HasColumnType("integer")
                        .HasColumnName("idprestataire");

                    b.HasKey("Iddemandeclient")
                        .HasName("demandeclient_pkey");

                    b.HasIndex("Idclient");

                    b.HasIndex("Idprestataire");

                    b.ToTable("demandeclient", (string)null);
                });

            modelBuilder.Entity("Hirfa.Web.Models.Demandeprestataire", b =>
                {
                    b.Property<int>("Iddemandeprestataire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("iddemandeprestataire");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Iddemandeprestataire"));

                    b.Property<string>("Adresse")
                        .HasColumnType("text")
                        .HasColumnName("adresse");

                    b.Property<string>("Casierjudiciaire")
                        .HasColumnType("text")
                        .HasColumnName("casierjudiciaire");

                    b.Property<string>("Cv")
                        .HasColumnType("text")
                        .HasColumnName("cv");

                    b.Property<DateOnly?>("Datenaissance")
                        .HasColumnType("date")
                        .HasColumnName("datenaissance");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Etat")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("etat");

                    b.Property<string>("Nin")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nin");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nom");

                    b.Property<string>("Numtel")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("numtel");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("prenom");

                    b.Property<string>("Reason")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("reason");

                    b.Property<string>("Sexe")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("sexe");

                    b.Property<string>("Typeservice")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("typeservice");

                    b.HasKey("Iddemandeprestataire")
                        .HasName("demandeprestataire_pkey");

                    b.HasIndex(new[] { "Email" }, "demandeprestataire_email_key")
                        .IsUnique();

                    b.HasIndex(new[] { "Nin" }, "demandeprestataire_nin_key")
                        .IsUnique();

                    b.ToTable("demandeprestataire", (string)null);
                });

            modelBuilder.Entity("Hirfa.Web.Models.Devi", b =>
                {
                    b.Property<int>("Iddevis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("iddevis");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Iddevis"));

                    b.Property<string>("Avisclient")
                        .HasColumnType("text")
                        .HasColumnName("avisclient");

                    b.Property<DateOnly?>("Datelimite")
                        .HasColumnType("date")
                        .HasColumnName("datelimite");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Etat")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("etat");

                    b.Property<int>("Iddemandeclient")
                        .HasColumnType("integer")
                        .HasColumnName("iddemandeclient");

                    b.Property<int>("Idprestataire")
                        .HasColumnType("integer")
                        .HasColumnName("idprestataire");

                    b.Property<decimal>("Montantglobal")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("montantglobal");

                    b.HasKey("Iddevis")
                        .HasName("devis_pkey");

                    b.HasIndex("Iddemandeclient");

                    b.HasIndex("Idprestataire");

                    b.ToTable("devis", (string)null);
                });

            modelBuilder.Entity("Hirfa.Web.Models.Diplome", b =>
                {
                    b.Property<int>("Iddiplome")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("iddiplome");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Iddiplome"));

                    b.Property<int?>("Anneeobtention")
                        .HasColumnType("integer")
                        .HasColumnName("anneeobtention");

                    b.Property<string>("Fiche")
                        .HasColumnType("text")
                        .HasColumnName("fiche");

                    b.Property<int>("Idprestataire")
                        .HasColumnType("integer")
                        .HasColumnName("idprestataire");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("institution");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Iddiplome")
                        .HasName("diplome_pkey");

                    b.HasIndex("Idprestataire");

                    b.ToTable("diplome", (string)null);
                });

            modelBuilder.Entity("Hirfa.Web.Models.Diplomedemande", b =>
                {
                    b.Property<int>("Iddiplomedemande")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("iddiplomedemande");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Iddiplomedemande"));

                    b.Property<int?>("Anneeobtention")
                        .HasColumnType("integer")
                        .HasColumnName("anneeobtention");

                    b.Property<string>("Fiche")
                        .HasColumnType("text")
                        .HasColumnName("fiche");

                    b.Property<int>("Iddemandeprestataire")
                        .HasColumnType("integer")
                        .HasColumnName("iddemandeprestataire");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("institution");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Iddiplomedemande")
                        .HasName("diplomedemande_pkey");

                    b.HasIndex("Iddemandeprestataire");

                    b.ToTable("diplomedemande", (string)null);
                });

            modelBuilder.Entity("Hirfa.Web.Models.Evaluation", b =>
                {
                    b.Property<int>("Idevaluation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idevaluation");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idevaluation"));

                    b.Property<string>("Commentaire")
                        .HasColumnType("text")
                        .HasColumnName("commentaire");

                    b.Property<int>("Idclient")
                        .HasColumnType("integer")
                        .HasColumnName("idclient");

                    b.Property<int>("Idprestataire")
                        .HasColumnType("integer")
                        .HasColumnName("idprestataire");

                    b.Property<string>("Image")
                        .HasColumnType("text")
                        .HasColumnName("image");

                    b.Property<int>("Note")
                        .HasColumnType("integer")
                        .HasColumnName("note");

                    b.HasKey("Idevaluation")
                        .HasName("evaluation_pkey");

                    b.HasIndex("Idclient");

                    b.HasIndex("Idprestataire");

                    b.ToTable("evaluation", (string)null);
                });

            modelBuilder.Entity("Hirfa.Web.Models.Facture", b =>
                {
                    b.Property<int>("Idfacture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idfacture");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idfacture"));

                    b.Property<DateOnly?>("Dateecheance")
                        .HasColumnType("date")
                        .HasColumnName("dateecheance");

                    b.Property<DateOnly>("Dateemission")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("dateemission")
                        .HasDefaultValueSql("CURRENT_DATE");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("Iddemandeclient")
                        .HasColumnType("integer")
                        .HasColumnName("iddemandeclient");

                    b.Property<string>("Modepaiement")
                        .HasColumnType("text")
                        .HasColumnName("modepaiement");

                    b.HasKey("Idfacture")
                        .HasName("facture_pkey");

                    b.HasIndex(new[] { "Iddemandeclient" }, "facture_iddemandeclient_key")
                        .IsUnique();

                    b.ToTable("facture", (string)null);
                });

            modelBuilder.Entity("Hirfa.Web.Models.Matierefacture", b =>
                {
                    b.Property<int>("Idmatierefacture")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idmatierefacture");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idmatierefacture"));

                    b.Property<string>("Nommat")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nommat");

                    b.Property<decimal>("Prixmat")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("prixmat");

                    b.HasKey("Idmatierefacture")
                        .HasName("matierefacture_pkey");

                    b.ToTable("matierefacture", (string)null);
                });

            modelBuilder.Entity("Hirfa.Web.Models.Matierepremiere", b =>
                {
                    b.Property<int>("Idmatierepremiere")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idmatierepremiere");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idmatierepremiere"));

                    b.Property<string>("Nommat")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nommat");

                    b.Property<decimal>("Prixmat")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("prixmat");

                    b.HasKey("Idmatierepremiere")
                        .HasName("matierepremiere_pkey");

                    b.ToTable("matierepremiere", (string)null);
                });

            modelBuilder.Entity("Hirfa.Web.Models.Plainteclient", b =>
                {
                    b.Property<int>("Idplainteclient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idplainteclient");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idplainteclient"));

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("contenu");

                    b.Property<DateOnly>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date")
                        .HasDefaultValueSql("CURRENT_DATE");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("Idclient")
                        .HasColumnType("integer")
                        .HasColumnName("idclient");

                    b.Property<int>("Idprestataire")
                        .HasColumnType("integer")
                        .HasColumnName("idprestataire");

                    b.Property<string>("Sujet")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sujet");

                    b.HasKey("Idplainteclient")
                        .HasName("plainteclient_pkey");

                    b.HasIndex("Idclient");

                    b.HasIndex("Idprestataire");

                    b.ToTable("plainteclient", (string)null);
                });

            modelBuilder.Entity("Hirfa.Web.Models.Plainteprestataire", b =>
                {
                    b.Property<int>("Idplainteprestataire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idplainteprestataire");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idplainteprestataire"));

                    b.Property<string>("Contenu")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("contenu");

                    b.Property<DateOnly>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date")
                        .HasDefaultValueSql("CURRENT_DATE");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("Idclient")
                        .HasColumnType("integer")
                        .HasColumnName("idclient");

                    b.Property<int>("Idprestataire")
                        .HasColumnType("integer")
                        .HasColumnName("idprestataire");

                    b.Property<string>("Sujet")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sujet");

                    b.HasKey("Idplainteprestataire")
                        .HasName("plainteprestataire_pkey");

                    b.HasIndex("Idclient");

                    b.HasIndex("Idprestataire");

                    b.ToTable("plainteprestataire", (string)null);
                });

            modelBuilder.Entity("Hirfa.Web.Models.Prestataire", b =>
                {
                    b.Property<int>("Idprestataire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idprestataire");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idprestataire"));

                    b.Property<string>("Adresse")
                        .HasColumnType("text")
                        .HasColumnName("adresse");

                    b.Property<string>("Casierjudiciaire")
                        .HasColumnType("text")
                        .HasColumnName("casierjudiciaire");

                    b.Property<string>("Cv")
                        .HasColumnType("text")
                        .HasColumnName("cv");

                    b.Property<DateOnly?>("Datenaissance")
                        .HasColumnType("date")
                        .HasColumnName("datenaissance");

                    b.Property<bool>("Estdisponible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("estdisponible");

                    b.Property<int>("Idcompte")
                        .HasColumnType("integer")
                        .HasColumnName("idcompte");

                    b.Property<int>("Iddemandeprestataire")
                        .HasColumnType("integer")
                        .HasColumnName("iddemandeprestataire");

                    b.Property<string>("Nin")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nin");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nom");

                    b.Property<string>("Numerotelephone")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("numerotelephone");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("prenom");

                    b.Property<string>("Sexe")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("sexe");

                    b.Property<string>("Typeservice")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("typeservice");

                    b.HasKey("Idprestataire")
                        .HasName("prestataire_pkey");

                    b.HasIndex("Iddemandeprestataire");

                    b.HasIndex(new[] { "Idcompte" }, "prestataire_idcompte_key")
                        .IsUnique();

                    b.HasIndex(new[] { "Nin" }, "prestataire_nin_key")
                        .IsUnique();

                    b.ToTable("prestataire", (string)null);
                });

            modelBuilder.Entity("Hirfa.Web.Models.Quantitematieredevi", b =>
                {
                    b.Property<int>("Iddevis")
                        .HasColumnType("integer")
                        .HasColumnName("iddevis");

                    b.Property<int>("Idmatierepremiere")
                        .HasColumnType("integer")
                        .HasColumnName("idmatierepremiere");

                    b.Property<decimal>("Quantite")
                        .HasColumnType("numeric")
                        .HasColumnName("quantite");

                    b.HasKey("Iddevis", "Idmatierepremiere")
                        .HasName("quantitematieredevis_pkey");

                    b.HasIndex("Idmatierepremiere");

                    b.ToTable("quantitematieredevis", (string)null);
                });

            modelBuilder.Entity("Hirfa.Web.Models.Quantitematierefacture", b =>
                {
                    b.Property<int>("Idfacture")
                        .HasColumnType("integer")
                        .HasColumnName("idfacture");

                    b.Property<int>("Idmatierefacture")
                        .HasColumnType("integer")
                        .HasColumnName("idmatierefacture");

                    b.Property<decimal>("Quantite")
                        .HasColumnType("numeric")
                        .HasColumnName("quantite");

                    b.HasKey("Idfacture", "Idmatierefacture")
                        .HasName("quantitematierefacture_pkey");

                    b.HasIndex("Idmatierefacture");

                    b.ToTable("quantitematierefacture", (string)null);
                });

            modelBuilder.Entity("Hirfa.Web.Models.Serviceclient", b =>
                {
                    b.Property<int>("Idserviceclient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idserviceclient");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idserviceclient"));

                    b.Property<string>("Adresse")
                        .HasColumnType("text")
                        .HasColumnName("adresse");

                    b.Property<DateOnly?>("Datenaissance")
                        .HasColumnType("date")
                        .HasColumnName("datenaissance");

                    b.Property<int>("Idcompte")
                        .HasColumnType("integer")
                        .HasColumnName("idcompte");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nom");

                    b.Property<string>("Numerotelephone")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("numerotelephone");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("prenom");

                    b.Property<string>("Sexe")
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("sexe");

                    b.HasKey("Idserviceclient")
                        .HasName("serviceclient_pkey");

                    b.HasIndex(new[] { "Idcompte" }, "serviceclient_idcompte_key")
                        .IsUnique();

                    b.ToTable("serviceclient", (string)null);
                });

            modelBuilder.Entity("Hirfa.Web.Models.Admin", b =>
                {
                    b.HasOne("Hirfa.Web.Models.Compte", "IdcompteNavigation")
                        .WithOne("Admin")
                        .HasForeignKey("Hirfa.Web.Models.Admin", "Idcompte")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("admin_idcompte_fkey");

                    b.Navigation("IdcompteNavigation");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Client", b =>
                {
                    b.HasOne("Hirfa.Web.Models.Compte", "IdcompteNavigation")
                        .WithOne("Client")
                        .HasForeignKey("Hirfa.Web.Models.Client", "Idcompte")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("client_idcompte_fkey");

                    b.Navigation("IdcompteNavigation");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Demandeclient", b =>
                {
                    b.HasOne("Hirfa.Web.Models.Client", "IdclientNavigation")
                        .WithMany("Demandeclients")
                        .HasForeignKey("Idclient")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("demandeclient_idclient_fkey");

                    b.HasOne("Hirfa.Web.Models.Prestataire", "IdprestataireNavigation")
                        .WithMany("Demandeclients")
                        .HasForeignKey("Idprestataire")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("demandeclient_idprestataire_fkey");

                    b.Navigation("IdclientNavigation");

                    b.Navigation("IdprestataireNavigation");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Devi", b =>
                {
                    b.HasOne("Hirfa.Web.Models.Demandeclient", "IddemandeclientNavigation")
                        .WithMany("Devis")
                        .HasForeignKey("Iddemandeclient")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("devis_iddemandeclient_fkey");

                    b.HasOne("Hirfa.Web.Models.Prestataire", "IdprestataireNavigation")
                        .WithMany("Devis")
                        .HasForeignKey("Idprestataire")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("devis_idprestataire_fkey");

                    b.Navigation("IddemandeclientNavigation");

                    b.Navigation("IdprestataireNavigation");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Diplome", b =>
                {
                    b.HasOne("Hirfa.Web.Models.Prestataire", "IdprestataireNavigation")
                        .WithMany("Diplomes")
                        .HasForeignKey("Idprestataire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("diplome_idprestataire_fkey");

                    b.Navigation("IdprestataireNavigation");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Diplomedemande", b =>
                {
                    b.HasOne("Hirfa.Web.Models.Demandeprestataire", "IddemandeprestataireNavigation")
                        .WithMany("Diplomedemandes")
                        .HasForeignKey("Iddemandeprestataire")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("diplomedemande_iddemandeprestataire_fkey");

                    b.Navigation("IddemandeprestataireNavigation");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Evaluation", b =>
                {
                    b.HasOne("Hirfa.Web.Models.Client", "IdclientNavigation")
                        .WithMany("Evaluations")
                        .HasForeignKey("Idclient")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("evaluation_idclient_fkey");

                    b.HasOne("Hirfa.Web.Models.Prestataire", "IdprestataireNavigation")
                        .WithMany("Evaluations")
                        .HasForeignKey("Idprestataire")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("evaluation_idprestataire_fkey");

                    b.Navigation("IdclientNavigation");

                    b.Navigation("IdprestataireNavigation");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Facture", b =>
                {
                    b.HasOne("Hirfa.Web.Models.Demandeclient", "IddemandeclientNavigation")
                        .WithOne("Facture")
                        .HasForeignKey("Hirfa.Web.Models.Facture", "Iddemandeclient")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("facture_iddemandeclient_fkey");

                    b.Navigation("IddemandeclientNavigation");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Plainteclient", b =>
                {
                    b.HasOne("Hirfa.Web.Models.Client", "IdclientNavigation")
                        .WithMany("Plainteclients")
                        .HasForeignKey("Idclient")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("plainteclient_idclient_fkey");

                    b.HasOne("Hirfa.Web.Models.Prestataire", "IdprestataireNavigation")
                        .WithMany("Plainteclients")
                        .HasForeignKey("Idprestataire")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("plainteclient_idprestataire_fkey");

                    b.Navigation("IdclientNavigation");

                    b.Navigation("IdprestataireNavigation");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Plainteprestataire", b =>
                {
                    b.HasOne("Hirfa.Web.Models.Client", "IdclientNavigation")
                        .WithMany("Plainteprestataires")
                        .HasForeignKey("Idclient")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("plainteprestataire_idclient_fkey");

                    b.HasOne("Hirfa.Web.Models.Prestataire", "IdprestataireNavigation")
                        .WithMany("Plainteprestataires")
                        .HasForeignKey("Idprestataire")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("plainteprestataire_idprestataire_fkey");

                    b.Navigation("IdclientNavigation");

                    b.Navigation("IdprestataireNavigation");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Prestataire", b =>
                {
                    b.HasOne("Hirfa.Web.Models.Compte", "IdcompteNavigation")
                        .WithOne("Prestataire")
                        .HasForeignKey("Hirfa.Web.Models.Prestataire", "Idcompte")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("prestataire_idcompte_fkey");

                    b.HasOne("Hirfa.Web.Models.Demandeprestataire", "IddemandeprestataireNavigation")
                        .WithMany("Prestataires")
                        .HasForeignKey("Iddemandeprestataire")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("prestataire_iddemandeprestataire_fkey");

                    b.Navigation("IdcompteNavigation");

                    b.Navigation("IddemandeprestataireNavigation");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Quantitematieredevi", b =>
                {
                    b.HasOne("Hirfa.Web.Models.Devi", "IddevisNavigation")
                        .WithMany("Quantitematieredevis")
                        .HasForeignKey("Iddevis")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("quantitematieredevis_iddevis_fkey");

                    b.HasOne("Hirfa.Web.Models.Matierepremiere", "IdmatierepremiereNavigation")
                        .WithMany("Quantitematieredevis")
                        .HasForeignKey("Idmatierepremiere")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("quantitematieredevis_idmatierepremiere_fkey");

                    b.Navigation("IddevisNavigation");

                    b.Navigation("IdmatierepremiereNavigation");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Quantitematierefacture", b =>
                {
                    b.HasOne("Hirfa.Web.Models.Facture", "IdfactureNavigation")
                        .WithMany("Quantitematierefactures")
                        .HasForeignKey("Idfacture")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("quantitematierefacture_idfacture_fkey");

                    b.HasOne("Hirfa.Web.Models.Matierefacture", "IdmatierefactureNavigation")
                        .WithMany("Quantitematierefactures")
                        .HasForeignKey("Idmatierefacture")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("quantitematierefacture_idmatierefacture_fkey");

                    b.Navigation("IdfactureNavigation");

                    b.Navigation("IdmatierefactureNavigation");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Serviceclient", b =>
                {
                    b.HasOne("Hirfa.Web.Models.Compte", "IdcompteNavigation")
                        .WithOne("Serviceclient")
                        .HasForeignKey("Hirfa.Web.Models.Serviceclient", "Idcompte")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("serviceclient_idcompte_fkey");

                    b.Navigation("IdcompteNavigation");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Client", b =>
                {
                    b.Navigation("Demandeclients");

                    b.Navigation("Evaluations");

                    b.Navigation("Plainteclients");

                    b.Navigation("Plainteprestataires");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Compte", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Client");

                    b.Navigation("Prestataire");

                    b.Navigation("Serviceclient");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Demandeclient", b =>
                {
                    b.Navigation("Devis");

                    b.Navigation("Facture");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Demandeprestataire", b =>
                {
                    b.Navigation("Diplomedemandes");

                    b.Navigation("Prestataires");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Devi", b =>
                {
                    b.Navigation("Quantitematieredevis");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Facture", b =>
                {
                    b.Navigation("Quantitematierefactures");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Matierefacture", b =>
                {
                    b.Navigation("Quantitematierefactures");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Matierepremiere", b =>
                {
                    b.Navigation("Quantitematieredevis");
                });

            modelBuilder.Entity("Hirfa.Web.Models.Prestataire", b =>
                {
                    b.Navigation("Demandeclients");

                    b.Navigation("Devis");

                    b.Navigation("Diplomes");

                    b.Navigation("Evaluations");

                    b.Navigation("Plainteclients");

                    b.Navigation("Plainteprestataires");
                });
#pragma warning restore 612, 618
        }
    }
}

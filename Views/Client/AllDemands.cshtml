@using Hirfa.Web.Models
@model IEnumerable<Hirfa.Web.ViewModels.DemandeClientViewModel>
@{
    ViewData["Title"] = "All Demands";
}

<div class="container mt-5">
    <h2 class="text-center">All Demands</h2>
    <div>
        <label for="statusFilter">Filter by Status:</label>
        <select id="statusFilter" onchange="filterDemands()">
            <option value="">All</option>
            <option value="Pending">Pending</option>
            <option value="Matching">Matching</option>
            <option value="Complete">Complete</option>
            <option value="Canceled">Canceled</option>
            <option value="NotFound">Not Found</option>
        </select>
    </div>
    <table class="table table-striped table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Category</th>
                <th>Description</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Demand Date</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="demandTable">
            @foreach (var demand in Model)
            {
                <tr data-status="@demand.Etat">
                    <td>@demand.Categorie</td>
                    <td>@demand.Description</td>
                    <td>@demand.Datedebut.ToString("yyyy-MM-dd HH:mm")</td>
                    <td>@(demand.Datefin.HasValue ? demand.Datefin.Value.ToString("yyyy-MM-dd HH:mm") : "N/A")</td>
                    <td>@demand.Datedemande.ToString("yyyy-MM-dd HH:mm")</td>
                    <td>
                        @switch (demand.Etat)
                        {
                            case DemandeclientStatus.Pending:
                                <span class="badge" style="background-color: #3c569c; color: white; border-radius: 10px;">
                                    Pending
                                </span>
                                break;
                            case DemandeclientStatus.Matching:
                                <span class="badge" style="background-color: #ffc107; color: black; border-radius: 10px;">
                                    Matching
                                </span>
                                break;
                            case DemandeclientStatus.Complete:
                                <span class="badge" style="background-color: green; color: white; border-radius: 10px;">
                                    Complete
                                </span>
                                break;
                            case DemandeclientStatus.Canceled:
                                <span class="badge" style="background-color: #dc3545; color: white; border-radius: 10px;">
                                    Canceled
                                </span>
                                break;
                            case DemandeclientStatus.NotFound:
                                <span class="badge" style="background-color: #6c757d; color: white; border-radius: 10px;">
                                    Not Found
                                </span>
                                break;
                            case DemandeclientStatus.WorkOn:
                                <span class="badge" style="background-color: green; color: white; border-radius: 10px;">
                                    Work On
                                </span>
                                break;
                            default:
                                <span class="badge badge-secondary" style="border-radius: 10px;">
                                    @demand.Etat
                                </span>
                                break;
                        }
                    </td>
                    <td>
                        @if (demand.Etat == DemandeclientStatus.Pending)
                        {
                            <a asp-action="CancelDemand" asp-route-id="@demand.Id" class="btn btn-danger btn-sm">Cancel</a>
                        }
                        else if (demand.Etat == DemandeclientStatus.Matching && demand.Devis?.Etat == "Submitted")
                        {
                            <a asp-action="SeeDevis" asp-route-id="@demand.DevisId" class="btn btn-primary btn-sm">See Devis</a>
                        }
                        else if (demand.Etat == DemandeclientStatus.WorkOn)
                        {
                            <form asp-action="CompleteDemand" asp-controller="Client" method="post" class="d-inline">
                                <input type="hidden" name="id" value="@demand.Id" />
                                <button type="submit" class="btn btn-success btn-sm">Complete</button>
                            </form>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    function filterDemands() {
        const filter = document.getElementById('statusFilter').value;
        const rows = document.querySelectorAll('#demandTable tr');
        rows.forEach(row => {
            const status = row.getAttribute('data-status');
            row.style.display = filter === '' || status === filter ? '' : 'none';
        });
    }
</script>
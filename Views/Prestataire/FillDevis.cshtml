@model Hirfa.Web.ViewModels.DevisViewModel

@{
    ViewData["Title"] = "Demand Details & Create Devis";
}

<!-- Assuming you have Bootstrap Icons linked in your _Layout.cshtml or here -->
<!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css"> -->

<div class="container mt-5 mb-5">
    <div class="row g-4">
        <!-- Demand Information Section -->
        <div class="col-lg-5">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0"><i class="bi bi-info-circle-fill me-2"></i>Demand Information</h5>
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-sm-5">Client Name:</dt>
                        <dd class="col-sm-7">@Model.DemandDetails.ClientName</dd>

                        <dt class="col-sm-5">Client Gender:</dt>
                        <dd class="col-sm-7">@Model.DemandDetails.ClientGender</dd>

                        <dt class="col-sm-5">Client Address:</dt>
                        <dd class="col-sm-7">@Model.DemandDetails.ClientAddress</dd>

                        <dt class="col-sm-5">Start Date:</dt>
                        <dd class="col-sm-7">@(Model.DemandDetails.DateDebut.HasValue ? Model.DemandDetails.DateDebut.Value.ToString("yyyy-MM-dd") : "N/A")</dd>

                        <dt class="col-sm-5">Start Time:</dt>
                        <dd class="col-sm-7">@(Model.DemandDetails.DateDebut.HasValue ? Model.DemandDetails.DateDebut.Value.ToString("HH:mm") : "N/A")</dd>

                        <dt class="col-sm-12 mt-2">Demand Description:</dt>
                        <dd class="col-sm-12">
                            <div class="p-2 bg-light border rounded">
                                @Model.DemandDetails.Description
                            </div>
                        </dd>
                    </dl>

                    <!-- Reject Demande Button Moved Here -->
                    <div class="d-flex justify-content-end mt-3">
                        <form asp-action="RejectDemande" asp-controller="Prestataire" method="post">
                            <input type="hidden" name="id" value="@Model.DemandDetails.Id" />
                            <button type="submit" class="btn btn-danger">
                                <i class="bi bi-x-circle me-2"></i>Reject Demande
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Create Devis Section -->
        <div class="col-lg-7">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0"><i class="bi bi-pencil-square me-2"></i>Create Devis</h5>
                </div>
                <div class="card-body">
                    <form method="post" action="/Prestataire/SubmitDevis">
                        <!-- Ensure all hidden fields are present -->
                        <input type="hidden" name="Iddevis" value="@Model.Iddevis" />
                        <input type="hidden" name="Idprestataire" value="@Model.Idprestataire" />
                        <input type="hidden" name="Iddemandeclient" value="@Model.Iddemandeclient" />

                        <!-- Datelimite -->
                        <div class="mb-3">
                            <label for="datelimite" class="form-label fw-semibold">Date Limite</label>
                            <input type="date" class="form-control" id="datelimite" name="Datelimite" value="@(Model.Datelimite.HasValue ? Model.Datelimite.Value.ToString("yyyy-MM-dd") : "")" />
                        </div>

                        <!-- Devis Description -->
                        <div class="mb-3">
                            <label for="description" class="form-label fw-semibold">Devis Description</label>
                            <textarea class="form-control" id="description" name="Description" rows="3" placeholder="Provide a detailed description for the devis...">@Model.Description</textarea>
                        </div>

                        <!-- Make Etat Field Hidden and Set Default Value to 'Submitted' -->
                        <input type="hidden" id="etat" name="Etat" value="Submitted" />

                        <hr class="my-4">

                        <div id="matiere-section">
                            <!-- Dynamic Matiere Premiere Section -->
                            <div class="matiere-row p-3 mb-3 border rounded bg-light position-relative">
                                <div class="row g-3">
                                    <div class="col-md-4">
                                        <label for="QuantiteMatieres[0].Idmatierepremiere" class="form-label">Nom Matiere</label>
                                        <input type="text" class="form-control" id="QuantiteMatieres[0].MatierePremiereName" name="QuantiteMatieres[0].MatierePremiereName" required />
                                    </div>
                                    <div class="col-md-4">
                                        <label for="QuantiteMatieres[0].PrixUnitaire" class="form-label">Prix Matiere</label>
                                        <input type="number" step="0.01" class="form-control" id="QuantiteMatieres[0].PrixUnitaire" name="QuantiteMatieres[0].PrixUnitaire" required />
                                    </div>
                                    <div class="col-md-4">
                                        <label for="QuantiteMatieres[0].Quantite" class="form-label">Quantite</label>
                                        <input type="number" class="form-control" id="QuantiteMatieres[0].Quantite" name="QuantiteMatieres[0].Quantite" required />
                                    </div>
                                </div>
                                <button type="button" class="btn-close position-absolute top-0 end-0 mt-2 me-2 remove-matiere" aria-label="Close"></button>
                            </div>
                        </div>

                        <button type="button" class="btn btn-outline-primary mb-4 w-100" id="add-matiere">
                            <i class="bi bi-plus-circle me-2"></i>Add Another Matiere
                        </button>

                        <!-- Add Prix of Work Field -->
                        <div class="mb-3">
                            <label for="prix-of-work" class="form-label fw-semibold">Prix of Work</label>
                            <input type="number" step="0.01" class="form-control" id="prix-of-work" name="PrixOfWork" placeholder="Enter the price of work..." required />
                        </div>

                        <!-- Total Prix Section -->
                        <div class="d-flex justify-content-between align-items-center mt-4">
                            <h6 class="fw-semibold">Total Prix:</h6>
                            <span id="total-prix" class="fw-bold">0.00</span>
                        </div>
                        <input type="hidden" id="Montantglobal" name="Montantglobal" value="0" />

                        <!-- Action Buttons -->
                        <div class="d-flex justify-content-end gap-2 mt-4 pt-3 border-top">
                            <button type="submit" class="btn btn-success">
                                <i class="bi bi-check-circle-fill me-2"></i>Submit Devis
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let matiereIndex = 1; // Start next index at 1 since 0 is already in markup
        document.getElementById('add-matiere').addEventListener('click', function() {
            const matiereSection = document.getElementById('matiere-section');
            const newRow = document.createElement('div');
            newRow.classList.add('matiere-row', 'p-3', 'mb-3', 'border', 'rounded', 'bg-light', 'position-relative');
            newRow.innerHTML =
                `<div class="row g-3">
                    <div class="col-md-4">
                        <label for="QuantiteMatieres[${matiereIndex}].MatierePremiereName" class="form-label">Nom Matiere</label>
                        <input type="text" class="form-control" id="QuantiteMatieres[${matiereIndex}].MatierePremiereName" name="QuantiteMatieres[${matiereIndex}].MatierePremiereName" required />
                    </div>
                    <div class="col-md-4">
                        <label for="QuantiteMatieres[${matiereIndex}].PrixUnitaire" class="form-label">Prix Matiere</label>
                        <input type="number" step="0.01" class="form-control" id="QuantiteMatieres[${matiereIndex}].PrixUnitaire" name="QuantiteMatieres[${matiereIndex}].PrixUnitaire" required />
                    </div>
                    <div class="col-md-4">
                        <label for="QuantiteMatieres[${matiereIndex}].Quantite" class="form-label">Quantite</label>
                        <input type="number" class="form-control" id="QuantiteMatieres[${matiereIndex}].Quantite" name="QuantiteMatieres[${matiereIndex}].Quantite" required />
                    </div>
                </div>
                <button type="button" class="btn-close position-absolute top-0 end-0 mt-2 me-2 remove-matiere" aria-label="Close"></button>`;
            matiereSection.appendChild(newRow);
            matiereIndex++;
        });

        function calculateTotalPrix() {
            let total = 0;
            document.querySelectorAll('#matiere-section .matiere-row').forEach(row => {
                const prix = parseFloat(row.querySelector('[name$=".PrixUnitaire"]').value) || 0;
                const quantite = parseFloat(row.querySelector('[name$=".Quantite"]').value) || 0;
                total += prix * quantite;
            });
            const prixOfWork = parseFloat(document.getElementById('prix-of-work').value) || 0;
            total += prixOfWork;
            document.getElementById('total-prix').textContent = total.toFixed(2);
            document.getElementById('Montantglobal').value = total.toFixed(2);
        }

        document.getElementById('matiere-section').addEventListener('input', calculateTotalPrix);
        document.getElementById('add-matiere').addEventListener('click', calculateTotalPrix);
        document.getElementById('prix-of-work').addEventListener('input', calculateTotalPrix);

        document.getElementById('matiere-section').addEventListener('click', function(event) {
            if (event.target.classList.contains('remove-matiere')) {
                event.target.closest('.matiere-row').remove();
                calculateTotalPrix(); // Recalculate total price after removal
            }
        });
    </script>
}

<style>
    /* Optional: Add a bit more visual flair if needed */
    .card-header {
        border-bottom: 1px solid #dee2e6;
    }
    .fw-semibold { 
        font-weight: 600 !important; /* Bootstrap 5 has fw-semibold but sometimes needs !important with form-labels */
    }
    /* Ensure unique IDs for labels if you have multiple forms or repeated elements,
       or ensure the 'for' attribute matches the input 'id' correctly after dynamic additions.
       The current JS script correctly generates unique names and should be fine for 'id' if you also make them unique.
    */
</style>
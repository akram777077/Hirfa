@model IEnumerable<Hirfa.Web.ViewModels.PrestataireDemandeListItemViewModel>
@{
    ViewData["Title"] = "Prestataire Demands";
    var statusFilter = Context.Request.Query["status"].ToString();
    var allStatuses = new List<(string Value, string Text)>
    {
        ("", "All Statuses"),
        ("pending", "Pending"),
        ("valide", "Valide"),
        ("non valide", "Non Valide")
        // Add more statuses here if needed
    };
}

<style>
    /* Styles specific to list/table pages - can be in site.css */
    .page-content-container {
        padding-top: 1.5rem;
        padding-bottom: 3rem;
    }

    .list-header {
        margin-bottom: 1.5rem;
    }
    .list-header h1 {
        font-size: 2rem;
        font-weight: 600;
        color: #2c3e50;
    }

    .filter-controls-card {
        border-radius: 0.75rem;
        box-shadow: 0 4px 15px rgba(0,0,0,0.05);
        border: none;
        margin-bottom: 1.5rem;
    }
    .filter-controls-card .card-body {
        padding: 1.25rem;
    }
    .filter-controls-card .form-label {
        font-weight: 500;
        font-size: 0.9rem;
        color: #495057;
        margin-bottom: 0; /* Align with select input */
    }
    .filter-controls-card .form-select {
        border-radius: 0.5rem;
        font-size: 0.9rem;
        padding: 0.6rem 1rem;
        max-width: 250px; /* Control width of select */
        background-color: #f8f9fa;
        border-color: #ced4da;
    }
    .filter-controls-card .form-select:focus {
        border-color: #2575fc;
        box-shadow: 0 0 0 0.2rem rgba(37, 117, 252, 0.2);
    }

    .table-container-card {
        border-radius: 0.75rem;
        box-shadow: 0 8px 25px rgba(0,0,0,0.07);
        border: none;
        overflow: hidden; /* Ensures border-radius applies to table */
    }
    
    .modern-table {
        margin-bottom: 0; /* Remove default table margin as card handles it */
        font-size: 0.9rem;
        border-collapse: separate; /* Allows border-spacing if needed, or just for cleaner lines */
        border-spacing: 0;
    }

    .modern-table thead th {
        background-color: #f8f9fa; /* Light, clean header */
        color: #343a40;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        border-bottom: 2px solid #dee2e6; /* Stronger bottom border for header */
        border-top: none;
        padding: 0.9rem 1rem;
        vertical-align: middle;
    }
    .modern-table tbody td {
        padding: 0.9rem 1rem;
        vertical-align: middle;
        border-top: 1px solid #eff2f7; /* Lighter row separator */
        color: #495057;
    }
    .modern-table tbody tr:hover {
        background-color: #fcfdff; /* Very subtle hover */
    }
    .modern-table tbody tr:last-child td {
        border-bottom: none;
    }

    .modern-table .badge {
        font-size: 0.78rem;
        font-weight: 600;
        padding: 0.4em 0.75em;
        border-radius: 0.375rem; /* Standard badge rounding */
    }
    /* Specific badge styling for better contrast if needed */
    .modern-table .badge.bg-warning.text-dark { background-color: #ffca2c !important; color: #212529 !important; }
    .modern-table .badge.bg-success { background-color: #198754 !important; }
    .modern-table .badge.bg-danger { background-color: #dc3545 !important; }
    .modern-table .badge.bg-secondary { background-color: #6c757d !important; }

    .modern-table .btn-action {
        font-size: 0.8rem;
        padding: 0.35rem 0.8rem;
        border-radius: 0.375rem;
        display: inline-flex;
        align-items: center;
        gap: 0.3rem; /* Space between icon and text */
    }
     .modern-table .btn-action.btn-outline-primary {
        color: #2575fc;
        border-color: #2575fc;
    }
    .modern-table .btn-action.btn-outline-primary:hover {
        background-color: #2575fc;
        color: #fff;
    }

    .no-demands-message {
        text-align: center;
        padding: 2rem;
        color: #6c757d;
        font-size: 1.1rem;
    }
</style>

<div class="container page-content-container">
    <div class="list-header d-flex justify-content-between align-items-center">
        <h1>Prestataire Demands</h1>
        @* Optional: Add a "Create New" button here if applicable
        <a asp-action="CreatePrestataireDemand" class="btn btn-primary">
            <i class="bi bi-plus-circle-fill me-2"></i>New Demand
        </a>
        *@
    </div>

    <div class="card filter-controls-card">
        <div class="card-body">
            <form method="get" class="row gx-3 gy-2 align-items-center">
                <div class="col-auto">
                    <label for="statusFilter" class="form-label">Filter by Status:</label>
                </div>
                <div class="col-auto">
                    <select id="statusFilter" name="status" class="form-select form-select-sm" onchange="this.form.submit()">
                        @foreach (var (val, txt) in allStatuses)
                        {
                            <option value="@val" selected="@(statusFilter == val)">@txt</option>
                        }
                    </select>
                </div>
                @* Optional: Add other filters like search by name/email here *@
                @*
                <div class="col-auto">
                    <input type="text" name="searchQuery" class="form-control form-control-sm" placeholder="Search..." value="@Context.Request.Query["searchQuery"]">
                </div>
                <div class="col-auto">
                    <button type="submit" class="btn btn-sm btn-outline-secondary">Search</button>
                </div>
                *@
            </form>
        </div>
    </div>

    <div class="card table-container-card">
        <div class="table-responsive">
            <table class="table modern-table table-hover">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Service Type</th>
                        <th>Status</th>
                        <th class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                @if (Model.Any(d => string.IsNullOrEmpty(statusFilter) || d.Etat.Equals(statusFilter, StringComparison.OrdinalIgnoreCase)))
                {
                    foreach (var d in Model.Where(d => string.IsNullOrEmpty(statusFilter) || d.Etat.Equals(statusFilter, StringComparison.OrdinalIgnoreCase)))
                    {
                        <tr>
                            <td>@d.Prenom @d.Nom</td>
                            <td>@d.Email</td>
                            <td>@d.Typeservice</td>
                            <td>
                                <span class="badge @(d.Etat.Equals("pending", StringComparison.OrdinalIgnoreCase) ? "bg-warning text-dark" : d.Etat.Equals("valide", StringComparison.OrdinalIgnoreCase) ? "bg-success" : d.Etat.Equals("non valide", StringComparison.OrdinalIgnoreCase) ? "bg-danger" : "bg-secondary")">
                                    @d.Etat
                                </span>
                            </td>
                            <td class="text-center">
                                <a asp-action="PrestataireDemandDetails" asp-controller="Prestataire" asp-route-id="@d.Iddemandeprestataire" class="btn btn-action btn-outline-primary" title="View Details">
                                    <i class="bi bi-eye-fill"></i> View
                                </a>
                                @* Add other actions like Edit/Delete here if needed, with appropriate auth checks *@
                                @*
                                <a asp-action="EditPrestataireDemand" asp-route-id="@d.Iddemandeprestataire" class="btn btn-action btn-outline-secondary ms-1" title="Edit">
                                    <i class="bi bi-pencil-fill"></i>
                                </a>
                                *@
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5" class="no-demands-message">
                            <i class="bi bi-info-circle me-2" style="font-size: 1.5rem;"></i>
                            No prestataire demands found matching the current filter.
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
        @* Optional: Add pagination controls here if your list is long *@
        @*
        <div class="card-footer bg-light py-2">
            <nav aria-label="Page navigation">
                <ul class="pagination pagination-sm justify-content-center mb-0">
                    <li class="page-item disabled"><a class="page-link" href="#">Previous</a></li>
                    <li class="page-item active"><a class="page-link" href="#">1</a></li>
                    <li class="page-item"><a class="page-link" href="#">2</a></li>
                    <li class="page-item"><a class="page-link" href="#">Next</a></li>
                </ul>
            </nav>
        </div>
        *@
    </div>
</div>